
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DRRSServer", targetNamespace = "http://Server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DRRSServer {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createRoom", targetNamespace = "http://Server/", className = "server.CreateRoom")
    @ResponseWrapper(localName = "createRoomResponse", targetNamespace = "http://Server/", className = "server.CreateRoomResponse")
    @Action(input = "http://Server/DRRSServer/createRoomRequest", output = "http://Server/DRRSServer/createRoomResponse")
    public String createRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRoom", targetNamespace = "http://Server/", className = "server.DeleteRoom")
    @ResponseWrapper(localName = "deleteRoomResponse", targetNamespace = "http://Server/", className = "server.DeleteRoomResponse")
    @Action(input = "http://Server/DRRSServer/deleteRoomRequest", output = "http://Server/DRRSServer/deleteRoomResponse")
    public String deleteRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        List<String> arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookRoom", targetNamespace = "http://Server/", className = "server.BookRoom")
    @ResponseWrapper(localName = "bookRoomResponse", targetNamespace = "http://Server/", className = "server.BookRoomResponse")
    @Action(input = "http://Server/DRRSServer/bookRoomRequest", output = "http://Server/DRRSServer/bookRoomResponse")
    public String bookRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableTimeSlot", targetNamespace = "http://Server/", className = "server.GetAvailableTimeSlot")
    @ResponseWrapper(localName = "getAvailableTimeSlotResponse", targetNamespace = "http://Server/", className = "server.GetAvailableTimeSlotResponse")
    @Action(input = "http://Server/DRRSServer/getAvailableTimeSlotRequest", output = "http://Server/DRRSServer/getAvailableTimeSlotResponse")
    public String getAvailableTimeSlot(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://Server/", className = "server.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://Server/", className = "server.CancelBookingResponse")
    @Action(input = "http://Server/DRRSServer/cancelBookingRequest", output = "http://Server/DRRSServer/cancelBookingResponse")
    public String cancelBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeReservation", targetNamespace = "http://Server/", className = "server.ChangeReservation")
    @ResponseWrapper(localName = "changeReservationResponse", targetNamespace = "http://Server/", className = "server.ChangeReservationResponse")
    @Action(input = "http://Server/DRRSServer/changeReservationRequest", output = "http://Server/DRRSServer/changeReservationResponse")
    public String changeReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTimeSlots", targetNamespace = "http://Server/", className = "server.GetTimeSlots")
    @ResponseWrapper(localName = "getTimeSlotsResponse", targetNamespace = "http://Server/", className = "server.GetTimeSlotsResponse")
    @Action(input = "http://Server/DRRSServer/getTimeSlotsRequest", output = "http://Server/DRRSServer/getTimeSlotsResponse")
    public List<String> getTimeSlots(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "overLimit", targetNamespace = "http://Server/", className = "server.OverLimit")
    @ResponseWrapper(localName = "overLimitResponse", targetNamespace = "http://Server/", className = "server.OverLimitResponse")
    @Action(input = "http://Server/DRRSServer/overLimitRequest", output = "http://Server/DRRSServer/overLimitResponse")
    public boolean overLimit(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns server.HashMapWrapper
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataMap", targetNamespace = "http://Server/", className = "server.GetDataMap")
    @ResponseWrapper(localName = "getDataMapResponse", targetNamespace = "http://Server/", className = "server.GetDataMapResponse")
    @Action(input = "http://Server/DRRSServer/getDataMapRequest", output = "http://Server/DRRSServer/getDataMapResponse")
    public HashMapWrapper getDataMap();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCampusName", targetNamespace = "http://Server/", className = "server.GetCampusName")
    @ResponseWrapper(localName = "getCampusNameResponse", targetNamespace = "http://Server/", className = "server.GetCampusNameResponse")
    @Action(input = "http://Server/DRRSServer/getCampusNameRequest", output = "http://Server/DRRSServer/getCampusNameResponse")
    public String getCampusName();

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCampusIndex", targetNamespace = "http://Server/", className = "server.GetCampusIndex")
    @ResponseWrapper(localName = "getCampusIndexResponse", targetNamespace = "http://Server/", className = "server.GetCampusIndexResponse")
    @Action(input = "http://Server/DRRSServer/getCampusIndexRequest", output = "http://Server/DRRSServer/getCampusIndexResponse")
    public int getCampusIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
